<?php

/**
 * BaseMarkaProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $category_id
 * @property date $fabricated
 * @property string $token
 * @property integer $stockqty
 * @property integer $cadprice
 * @property boolean $is_active
 * @property MarkaCategory $Category
 * @property Doctrine_Collection $MarkaOrderDetails
 * 
 * @method string              getName()              Returns the current record's "name" value
 * @method integer             getCategoryId()        Returns the current record's "category_id" value
 * @method date                getFabricated()        Returns the current record's "fabricated" value
 * @method string              getToken()             Returns the current record's "token" value
 * @method integer             getStockqty()          Returns the current record's "stockqty" value
 * @method integer             getCadprice()          Returns the current record's "cadprice" value
 * @method boolean             getIsActive()          Returns the current record's "is_active" value
 * @method MarkaCategory       getCategory()          Returns the current record's "Category" value
 * @method Doctrine_Collection getMarkaOrderDetails() Returns the current record's "MarkaOrderDetails" collection
 * @method MarkaProduct        setName()              Sets the current record's "name" value
 * @method MarkaProduct        setCategoryId()        Sets the current record's "category_id" value
 * @method MarkaProduct        setFabricated()        Sets the current record's "fabricated" value
 * @method MarkaProduct        setToken()             Sets the current record's "token" value
 * @method MarkaProduct        setStockqty()          Sets the current record's "stockqty" value
 * @method MarkaProduct        setCadprice()          Sets the current record's "cadprice" value
 * @method MarkaProduct        setIsActive()          Sets the current record's "is_active" value
 * @method MarkaProduct        setCategory()          Sets the current record's "Category" value
 * @method MarkaProduct        setMarkaOrderDetails() Sets the current record's "MarkaOrderDetails" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMarkaProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('marka_product');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fabricated', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('stockqty', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('cadprice', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MarkaCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('MarkaOrderDetails', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}